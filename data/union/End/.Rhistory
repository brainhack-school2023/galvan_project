boxplot(df_sl2lml, main="TRAL Volume Con Outliers")$out
boxplot(df_sl2lml, main="TRAL Volume Con Outliers", horizontal = TRUE )
stripchart(df_sl2lml, method = "jitter", pch = 19, add = TRUE, col = "blue")
Ctl_sl2lml<-(as.numeric(unlist(subset(data, label==1, select=c(sl2l_mean_length)))))
Est_sl2lml<-(as.numeric(unlist(subset(data, label==0, select=c(sl2l_mean_length)))))
df_sl2lml<-c()
df_sl2lml$Ctl_sl2lml <- Ctl_sl2lml
df_sl2lml$Est_sl2lml <- Est_sl2lml
min(df_sl2lml$Ctl_sl2lml)
datasinout<- subset(df_sl2lml$Ctl_sl2lml, df_sl2lml$Ctl_sl2lml > 60.0889 & df_sl2lml$Ctl_sl2lml < 95)
df_sl2lml$Ctl_sl2lml_so <- datasinout
boxplot(df_sl2lml, main="TRAL Volume Con Outliers")$out
boxplot(df_sl2lml, main="TRAL Volume Con Outliers", horizontal = TRUE )
stripchart(df_sl2lml, method = "jitter", pch = 19, add = TRUE, col = "blue")
Ctl_sl2lml<-(as.numeric(unlist(subset(data, label==1, select=c(sl2l_mean_length)))))
Est_sl2lml<-(as.numeric(unlist(subset(data, label==0, select=c(sl2l_mean_length)))))
df_sl2lml<-c()
df_sl2lml$Ctl_sl2lml <- Ctl_sl2lml
datasinout<- subset(df_sl2lml$Ctl_sl2lml, df_sl2lml$Ctl_sl2lml > 60.0889 & df_sl2lml$Ctl_sl2lml < 95)
df_sl2lml$Ctl_sl2lml_so <- datasinout
df_sl2lml$Est_sl2lml <- Est_sl2lml
min(df_sl2lml$Ctl_sl2lml)
boxplot(df_sl2lml, main="TRAL Volume Con Outliers")$out
boxplot(df_sl2lml, main="TRAL Volume Con Outliers", horizontal = TRUE )
stripchart(df_sl2lml, method = "jitter", pch = 19, add = TRUE, col = "blue")
View(data)
Ctl_sl2lml<-(as.numeric(unlist(subset(data, label==1, select=c(sl2l_mean_length)))))
Est_sl2lml<-(as.numeric(unlist(subset(data, label==0, select=c(sl2l_mean_length)))))
df_sl2lml<-c()
df_sl2lml$Ctl_sl2lml <- Ctl_sl2lml
datasinout<- subset(df_sl2lml$Ctl_sl2lml, df_sl2lml$Ctl_sl2lml > 60.0889 & df_sl2lml$Ctl_sl2lml < 95)
df_sl2lml$Ctl_sl2lml_so <- datasinout
df_sl2lml$Est_sl2lml <- Est_sl2lml
min(df_sl2lml$Ctl_sl2lml)
boxplot(df_sl2lml, main="sl2l Mean Length Con Outliers")$out
boxplot(df_sl2lml, main="sl2l Mean Length Con Outliers", horizontal = TRUE )
stripchart(df_sl2lml, method = "jitter", pch = 19, add = TRUE, col = "blue")
df_sl2ldm<-c()
df_sl2ldm$Ctl_sl2ldm <- Ctl_sl2ldm
Q <- quantile(df_sl2ldm$Ctl_sl2ldm, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(df_sl2ldm$Ctl_sl2ldm)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
datasinout<- subset(df_sl2ldm$Ctl_sl2ldm, df_sl2ldm$Ctl_sl2ldm > (Q[1] - 1.5*iqr) & df_sl2ldm$Ctl_sl2ldm < (Q[2]+1.5*iqr))
df_sl2ldm$Ctl_sl2ldm_SinOut<- datasinout
df_sl2ldm$Est_sl2ldm <- Est_sl2ldm
boxplot(df_sl2ldm, main="sl2l diameter" )
boxplot(df_sl2ldm, main="sl2l diameter", horizontal = TRUE )
stripchart(df_sl2ldm, method = "jitter", pch = 19, add = TRUE, col = "blue")
descdist(df_sl2ldm$Ctl_sl2ldm_SinOut, boot = 1000)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(MASS)
library(fitdistrplus)
library(ggstatsplot)
library(BSSasymp) #Cramer-ca
descdist(df_sl2ldm$Ctl_sl2ldm_SinOut, boot = 1000)
summary(df_sl2ldm$Ctl_sl2ldm_SinOut)
df_sl2ldm<-c()
df_sl2ldm$Ctl_sl2ldm <- Ctl_sl2ldm
Q <- quantile(df_sl2ldm$Ctl_sl2ldm, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(df_sl2ldm$Ctl_sl2ldm)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
datasinout<- subset(df_sl2ldm$Ctl_sl2ldm, df_sl2ldm$Ctl_sl2ldm > (Q[1] - 1.5*iqr) & df_sl2ldm$Ctl_sl2ldm < (Q[2]+1.5*iqr))
df_sl2ldm$Ctl_sl2ldm_SinOut<- datasinout
df_sl2ldm$Est_sl2ldm <- Est_sl2ldm
boxplot(df_sl2ldm, main="sl2l diameter" )
boxplot(df_sl2ldm, main="sl2l diameter", horizontal = TRUE )
stripchart(df_sl2ldm, method = "jitter", pch = 19, add = TRUE, col = "blue")
descdist(df_sl2ldm$Ctl_sl2ldm_SinOut, boot = 1000)
summary(df_sl2ldm$Ctl_sl2ldm_SinOut)
Ctl_ccbdm<-(as.numeric(unlist(subset(data, label==1, select=c(ccbd_diameter)))))
Est_ccbdm<-(as.numeric(unlist(subset(data, label==0, select=c(ccbd_diameter)))))
df_ccbdm<-c()
df_ccbdm$Ctl_ccbdm <- Ctl_ccbdm
df_ccbdm$Est_ccbdm <- Est_ccbdm
boxplot(df_ccbdm, main="CCBD diameter Con Outliers")
Q <- quantile(df_ccbdm$Ctl_ccbdm, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(df_ccbdm$Ctl_ccbdm)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
datasinout<- subset(df_ccbdm$Ctl_ccbdm, df_ccbdm$Ctl_ccbdm > (Q[1] - 1.5*iqr) & df_ccbdm$Ctl_ccbdm < (Q[2]+1.5*iqr))
df_ccbdm_sinOut<-c()
df_ccbdm_sinOut$Ctl_ccbdm<- datasinout
df_ccbdm_sinOut$Est_ccbdm <- Est_ccbdm
boxplot(df_ccbdm_sinOut, main="CCBD diameter sin Outliers" )
boxplot(df_ccbdm_sinOut, main="CCBD diameter sin Outliers", horizontal = TRUE )
stripchart(df_ccbdm_sinOut, method = "jitter", pch = 19, add = TRUE, col = "blue")
descdist(df_ccbdm_sinOut$Ctl_ccbdm, boot = 1000)
summary(df_ccbdm_sinOut$Ctl_ccbdm)
Ctl_ifoldm<-(as.numeric(unlist(subset(data, label==1, select=c(ifol_diameter)))))
Est_ifoldm<-(as.numeric(unlist(subset(data, label==0, select=c(ifol_diameter)))))
df_ifoldm<-c()
df_ifoldm$Ctl_ifoldm <- Ctl_ifoldm
df_ifoldm$Est_ifoldm <- Est_ifoldm
boxplot(df_ifoldm, main="IFOL diameter Con Outliers")
boxplot(df_ifoldm, main="IFOL diameter Con Outliers", horizontal = TRUE )
stripchart(df_ifoldm, method = "jitter", pch = 19, add = TRUE, col = "blue")
Q <- quantile(df_ifoldm$Ctl_ifoldm, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(df_ifoldm$Ctl_ifoldm)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
datasinout<- subset(df_ifoldm$Ctl_ifoldm, df_ifoldm$Ctl_ifoldm > (Q[1] - 1.5*iqr) & df_ifoldm$Ctl_ifoldm < (Q[2]+1.5*iqr))
df_ifoldm_sinOut<-c()
df_ifoldm_sinOut$Ctl_ifoldm<- datasinout
df_ifoldm_sinOut$Est_ifoldm <- Est_ifoldm
boxplot(df_ifoldm_sinOut, main="IFOL diameter sin Outliers" )$out
boxplot(df_ifoldm_sinOut, main="IFOL diameter sin Outliers", horizontal = TRUE )
stripchart(df_ifoldm_sinOut, method = "jitter", pch = 19, add = TRUE, col = "blue")
descdist(df_ifoldm_sinOut$Ctl_ifoldm, boot = 1000)
summary(df_ifoldm_sinOut$Ctl_ifoldm)
Ctl_ecplvl<-(as.numeric(unlist(subset(data, label==1, select=c(ecpl_volume)))))
Est_ecplvl<-(as.numeric(unlist(subset(data, label==0, select=c(ecpl_volume)))))
ControlUniq<-unique(Ctl_ecplvl)
EstudioUniq<-unique(Est_ecplvl)
df_ecplvl<-c()
df_ecplvl$Ctl_ecplvl <- Ctl_ecplvl
df_ecplvl$Est_ecplvl <- Est_ecplvl
df_ecplvl$CtlUniq <- ControlUniq
df_ecplvl$EstUniq <- EstudioUniq
boxplot(df_ecplvl, main="ECPL Volume Con Outliers")
boxplot(df_ecplvl, main="ECPL Volume Con Outliers", horizontal = TRUE )
stripchart(df_ecplvl, method = "jitter", pch = 19, add = TRUE, col = "blue")
Q <- quantile(df_ecplvl$Ctl_ecplvl, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(df_ecplvl$Ctl_ecplvl)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
datasinout<- subset(df_ecplvl$Ctl_ecplvl, df_ecplvl$Ctl_ecplvl > (Q[1] - 1.5*iqr) & df_ecplvl$Ctl_ecplvl < (Q[2]+1.5*iqr))
df_ecplvl_sinOut<-c()
df_ecplvl_sinOut$Ctl_ecplvl<- datasinout
Q <- quantile(df_ecplvl$CtlUniq, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(df_ecplvl$CtlUniq)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
datasinout<- subset(df_ecplvl$CtlUniq, df_ecplvl$CtlUniq > (Q[1] - 1.5*iqr) & df_ecplvl$CtlUniq < (Q[2]+1.5*iqr))
df_ecplvl_sinOut$CtlUniq<- datasinout
df_ecplvl_sinOut$Est_ecplvl<- Est_ecplvl
boxplot(df_ecplvl_sinOut, main="ECPL Volume Sujetos Control: Con y Sin Repetidos además Outliers" )$out
boxplot(df_ecplvl_sinOut, main="ECPL Volume Sujetos Control: Con y Sin Repetidos además Outliers", horizontal = TRUE )
stripchart(df_ecplvl_sinOut, method = "jitter", pch = 19, add = TRUE, col = "blue")
descdist(df_ecplvl_sinOut$CtlUniq, boot = 1000)
summary(df_ecplvl_sinOut$CtlUniq)
Ctl_tralvl<-(as.numeric(unlist(subset(data, label==1, select=c(tral_volume)))))
Est_tralvl<-(as.numeric(unlist(subset(data, label==0, select=c(tral_volume)))))
df_tralvl<-c()
df_tralvl$Ctl_tralvl <- Ctl_tralvl
df_tralvl$Est_tralvl <- Est_tralvl
boxplot(df_tralvl, main="TRAL Volume Con Outliers")$out
boxplot(df_tralvl, main="TRAL Volume Con Outliers", horizontal = TRUE )
stripchart(df_tralvl, method = "jitter", pch = 19, add = TRUE, col = "blue")
descdist(df_tralvl$Ctl_tralvl, boot = 1000)
summary(df_tralvl$Ctl_tralvl)
Ctl_sl2lml<-(as.numeric(unlist(subset(data, label==1, select=c(sl2l_mean_length)))))
Est_sl2lml<-(as.numeric(unlist(subset(data, label==0, select=c(sl2l_mean_length)))))
df_sl2lml<-c()
df_sl2lml$Ctl_sl2lml <- Ctl_sl2lml
datasinout<- subset(df_sl2lml$Ctl_sl2lml, df_sl2lml$Ctl_sl2lml > 60.0889 & df_sl2lml$Ctl_sl2lml < 95)
df_sl2lml$Ctl_sl2lml_so <- datasinout
df_sl2lml$Est_sl2lml <- Est_sl2lml
min(df_sl2lml$Ctl_sl2lml)
boxplot(df_sl2lml, main="sl2l Mean Length Con Outliers")$out
boxplot(df_sl2lml, main="sl2l Mean Length Con Outliers", horizontal = TRUE )
stripchart(df_sl2lml, method = "jitter", pch = 19, add = TRUE, col = "blue")
descdist(df_sl2lml$Ctl_sl2lml_so, boot = 1000)
summary(df_sl2lml$Ctl_sl2lml_so)
Ctl_ccbdml<-(as.numeric(unlist(subset(data, label==1, select=c(ccbd_mean_length)))))
Est_ccbdml<-(as.numeric(unlist(subset(data, label==0, select=c(ccbd_mean_length)))))
df_ccbdml<-c()
df_ccbdml$Ctl_ccbdml <- Ctl_ccbdml
df_ccbdml$Est_ccbdml <- Est_ccbdml
boxplot(df_ccbdml, main="CCBD mean Length Con Outliers")$out
boxplot(df_ccbdml, main="CCBD mean Length Con Outliers", horizontal = TRUE )
stripchart(df_ccbdml, method = "jitter", pch = 19, add = TRUE, col = "blue")
Q <- quantile(df_ccbdml$Ctl_ccbdml, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(df_ccbdml$Ctl_ccbdml)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
datasinout<- subset(df_ccbdml$Ctl_ccbdml, df_ccbdml$Ctl_ccbdml > (Q[1] - 1.5*iqr) & df_ccbdml$Ctl_ccbdml < (Q[2]+1.5*iqr))
df_ccbdml_sinOut<-c()
df_ccbdml_sinOut$Ctl_ccbdml<- datasinout
df_ccbdml_sinOut$Est_ccbdml <- Est_ccbdml
boxplot(df_ccbdml_sinOut, main="CCBD mean Length sin Outliers")$out
boxplot(df_ccbdml_sinOut, main="CCBD mean Length sin Outliers", horizontal = TRUE )
stripchart(df_ccbdml_sinOut, method = "jitter", pch = 19, add = TRUE, col = "blue")
descdist(df_ccbdml_sinOut$Ctl_ccbdml, boot = 1000)
summary(df_ccbdml_sinOut$Ctl_ccbdml)
Ctl_ifoldm<-(as.numeric(unlist(subset(data, label==1, select=c(ifol_diameter)))))
Est_ifoldm<-(as.numeric(unlist(subset(data, label==0, select=c(ifol_diameter)))))
df_ifoldm<-c()
df_ifoldm$Ctl_ifoldm <- Ctl_ifoldm
df_ifoldm$Est_ifoldm <- Est_ifoldm
boxplot(df_ifoldm, main="IFOL diameter Con Outliers")
boxplot(df_ifoldm, main="IFOL diameter Con Outliers", horizontal = TRUE )
stripchart(df_ifoldm, method = "jitter", pch = 19, add = TRUE, col = "blue")
Q <- quantile(df_ifoldm$Ctl_ifoldm, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(df_ifoldm$Ctl_ifoldm)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
datasinout<- subset(df_ifoldm$Ctl_ifoldm, df_ifoldm$Ctl_ifoldm > (Q[1] - 1.5*iqr) & df_ifoldm$Ctl_ifoldm < (Q[2]+1.5*iqr))
df_ifoldm_sinOut<-c()
df_ifoldm_sinOut$Ctl_ifoldm<- datasinout
df_ifoldm_sinOut$Est_ifoldm <- Est_ifoldm
boxplot(df_ifoldm_sinOut, main="IFOL diameter sin Outliers" )$out
boxplot(df_ifoldm_sinOut, main="IFOL diameter sin Outliers", horizontal = TRUE )
stripchart(df_ifoldm_sinOut, method = "jitter", pch = 19, add = TRUE, col = "blue")
descdist(df_ifoldm_sinOut$Ctl_ifoldm, boot = 1000)
summary(df_ifoldm_sinOut$Ctl_ifoldm)
gc()
gc()
gc()
gc()
gc()
install.packages(c('tibble', 'readr'))
install.packages(c("tibble", "readr"))
library(dplyr)
library(ggplot2)
library(gridExtra)
library(MASS)
library(fitdistrplus)
library(ggstatsplot)
library(tibble)
library(readr)
setwd("C:/hcgalvan/Repositorios/hcgalvan_project/data/union/End")
temp = gsub(".*target.*", "", readLines("seleccionestudio.csv"))
data<-read.table(text=temp, sep=",", header=TRUE)
View(data)
setwd("C:/hcgalvan/Repositorios/hcgalvan_project/data/union/End")
temp = gsub(".*target.*", "", readLines("seleccionestudio.csv"))
data<-read.table(text=temp, sep=",", header=TRUE)
dataf<-data.frame(data)
---
title: "R Notebook"
library(dplyr)
library(ggplot2)
library(gridExtra)
library(MASS)
library(fitdistrplus)
library(ggstatsplot)
library(tibble)
library(readr)
setwd("C:/hcgalvan/Repositorios/hcgalvan_project/data/union/End")
temp = gsub(".*target.*", "", readLines("seleccionestudio.csv"))
data<-read.table(text=temp, sep=",", header=TRUE)
dataf<-data.frame(data)
dataf<- dataf %>%
mutate(sl2ldmExp = if_else((dataf$sl2l_diameter > 22.10 & dataf$sl2l_diameter < 24.42), "0", "1"))
dataf<- dataf %>%
mutate(sl2ldmExp = if_else((dataf$sl2l_diameter > 22.10 & dataf$sl2l_diameter < 24.42), 0, 1))
dataf
### False = No Expuesto = 0; True = Expuesto = 1
dataf<- dataf %>%
mutate(sl2ldmExp = if_else((dataf$sl2l_diameter > 22.10 & dataf$sl2l_diameter < 24.42), 0, 1))
library(dplyr)
library(ggplot2)
library(gridExtra)
library(MASS)
library(fitdistrplus)
library(ggstatsplot)
library(tibble)
library(readr)
setwd("C:/hcgalvan/Repositorios/hcgalvan_project/data/union/End")
temp = gsub(".*target.*", "", readLines("seleccionestudio.csv"))
data<-read.table(text=temp, sep=",", header=TRUE)
dataf<-data.frame(data)
### False = No Expuesto = 0; True = Expuesto = 1
dataf<- dataf %>%
mutate(sl2ldmExp = if_else((dataf$sl2l_diameter > 22.10 & dataf$sl2l_diameter < 24.42), 0, 1))
mutate(ccbdmExp = if_else((dataf$ccbd_diameter > 14.68 & dataf$ccbd_diameter < 16.51), 0, 1))
### False = No Expuesto = 0; True = Expuesto = 1
dataf<- dataf %>%
mutate(sl2ldmExp = if_else((dataf$sl2l_diameter > 22.10 & dataf$sl2l_diameter < 24.42), 0, 1))
dataf<- dataf %>%
mutate(ccbdmExp = if_else((dataf$ccbd_diameter > 14.68 & dataf$ccbd_diameter < 16.51), 0, 1))
dataf
### False = No Expuesto = 0; True = Expuesto = 1
dataf<- dataf %>%
mutate(sl2ldmExp = if_else((dataf$sl2l_diameter > 22.10 & dataf$sl2l_diameter < 24.42), 0, 1))
dataf<- dataf %>%
mutate(ccbdmExp = if_else((dataf$ccbd_diameter > 14.68 & dataf$ccbd_diameter < 16.51), 0, 1))
dataf<- dataf %>%
mutate(ifoldmExp = if_else((dataf$ifol_diameter > 14.68 & dataf$ifol_diameter < 16.51), 0, 1))
dataf<- dataf %>%
mutate(ecplvlExp = if_else((dataf$ecpl_volume > 6455 & dataf$ecpl_volume < 8918), 0, 1))
dataf<- dataf %>%
mutate(tralvlExp = if_else((dataf$tral_volume > 12366 & dataf$tral_volume < 18004), 0, 1))
dataf<- dataf %>%
mutate(sl2lmlExp = if_else((dataf$sl2l_mean_length > 72.18 & dataf$sl2l_mean_length < 80.61), 0, 1))
dataf<- dataf %>%
mutate(ccbdmlExp = if_else((dataf$ccbd_mean_length > 112.62 & dataf$ccbd_mean_length < 123.81), 0, 1))
dataf(sl2ldmExp~ccbdmlExp)
dataf
dataf(sl2ldmExp~ccbdmlExp)
dataf(sl2ldmExp:ccbdmlExp)
dataf[sl2ldmExp:ccbdmlExp]
dataf[c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp","sl2lmlExp","ccbdmlExp"]
dataf[c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp","sl2lmlExp","ccbdmlExp"])
dataf[c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp","sl2lmlExp","ccbdmlExp")]
dataf[c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp","sl2lmlExp","ccbdmlExp")]
dataf[c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp","sl2lmlExp","ccbdmlExp")]
str(dataf)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & sl2lmlExp==1 & ccbdmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 )
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & sl2lmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & ccbdmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & ccbdmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & ccbdmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & ccbdmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & ccbdmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & sl2lmlExp==1 & ccbdmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & ccbdmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
plot(sl2ldmExp)
plot(dataf$sl2ldmExp)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
View(data)
install.packages("FactoMineR")
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & ccbdmlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
dataf[,c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp")]
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1 & ccbdmlExp==1)
t <- dataf[,c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp")]
t
pca_zq <- prcomp(t, scale = TRUE)
pca_zq <- prcomp(t, scale = TRUE) ## aquí escalo y realiza primeras componentes
names(pca_zq)
head(pca_zq$rotation)[, 1:5]
dim(pca_zq$rotation)
# Varianza explicada por cada componente
pca_zq$sdev^2
summary(pca_zq)
t <- dataf[,c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp","sl2lmlExp","ccbdmlExp")]
```{r}
pca_zq <- prcomp(t, scale = TRUE) ## aquí escalo y realiza primeras componentes
names(pca_zq)
head(pca_zq$rotation)[, 1:5]
dim(pca_zq$rotation)
# Varianza explicada por cada componente
pca_zq$sdev^2
summary(pca_zq)
fviz_screeplot(pca_zq, addlabels = TRUE, ylim = c(0, 20))
install.packages("factoextra")
library(factoextra)
fviz_screeplot(pca_zq, addlabels = TRUE, ylim = c(0, 20))
fviz_screeplot(pca_zq, addlabels = TRUE, ylim = c(0, 15))
fviz_screeplot(pca_zq, addlabels = TRUE)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
filter(dataf, sl2ldmExp==1 & ccbdmExp==1 & ifoldmExp==1 & ecplvlExp==1 & tralvlExp==1)
t <- dataf[,c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp","sl2lmlExp","ccbdmlExp")]
t1 <- dataf[,c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp"
)]
t <- dataf[,c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp","sl2lmlExp","ccbdmlExp")]
t1 <- dataf[,c("sl2ldmExp","ccbdmExp","ifoldmExp","ecplvlExp","tralvlExp")]
pca1_zq <- prcomp(t1, scale = TRUE) ## aquí escalo y realiza primeras componentes
names(pca1_zq)
head(pca1_zq$rotation)[, 1:5]
dim(pca1_zq$rotation)
# Varianza explicada por cada componente
pca1_zq$sdev^2
summary(pca1_zq)
fviz_screeplot(pca1_zq, addlabels = TRUE)
ev <- eigen(cor(t))
ev$values
fa.parallel(t, fa="fa")
install.packages("psych")
library(psych)
fa.parallel(t, fa="fa")
library(psych)
fa.parallel(t, fa="fa")
library(psych)
fa.parallel(t1, fa="fa")
library(psych)
fa.parallel(t, fa="fa")
library(psych)
fa.parallel(cor(t), n.obs=nrow(t), fa="fa", n.iter=100, main="Scree plots with parallel analysis")
fa.parallel.poly(t)
fa.parallel.poly(t1)
fa.parallel.poly(cor(t), n.obs=nrow(t), fa="fa", n.iter=100, main="Scree plots with parallel analysis")
fa.parallel.poly(t)
library(psych)
fa.parallel(cor(t), n.obs=nrow(t), n.iter=100, main="Scree plots with parallel analysis")
fa.parallel.poly(t)
library(psych)
fa.parallel(cor(t1), n.obs=nrow(t), n.iter=100, main="Scree plots with parallel analysis")
fa.parallel.poly(t1)
library(psych)
fa.parallel(cor(t), n.obs=nrow(t), n.iter=100, main="Scree plots with parallel analysis")
fa.parallel.poly(t)
library(psych)
fa.parallel(cor(t), n.obs=nrow(t), n.iter=100, main="Scree plots with parallel analysis")
fa.info <- fa.parallel.poly(t)
summary(fa.info)
library(psych)
fa1.infofa.parallel(cor(t), n.obs=nrow(t), n.iter=100, main="Scree plots with parallel analysis")
library(psych)
fa1.info<- fa.parallel(cor(t), n.obs=nrow(t), n.iter=100, main="Scree plots with parallel analysis")
fa.info <- fa.parallel.poly(t)
summary(fa.info)
summary(fa1.info)
# Regla de Kaiser y retener aquellos factores con un valor propio mayor que uno
ev <- eigen(cor(t))
ev1 <- eigen(cor(t1))
ev$values
ev1$values
library(psych)
fa1.info<- fa.parallel(cor(t), n.obs=nrow(t), n.iter=100, main="Scree plots with parallel analysis")
#fa.info <- fa.parallel.poly(t)
#summary(fa.info)
summary(fa1.info)
pca1_zq <- prcomp(t1, scale = TRUE) ## aquí escalo y realiza primeras componentes
names(pca1_zq)
head(pca1_zq$rotation)[, 1:5]
dim(pca1_zq$rotation)
# Varianza explicada por cada componente
pca1_zq$sdev^2
ev <- eigen(cor(t))
ev$values
summary(pca1_zq)
pca1_zq <- prcomp(t1, scale = TRUE) ## aquí escalo y realiza primeras componentes
names(pca1_zq)
head(pca1_zq$rotation)[, 1:5]
dim(pca1_zq$rotation)
# Varianza explicada por cada componente
pca1_zq$sdev^2
ev <- eigen(cor(t1))
ev$values
summary(pca1_zq)
pca1_zq <- prcomp(t1, scale = TRUE) ## aquí escalo y realiza primeras componentes
names(pca1_zq)
head(pca1_zq$rotation)[, 1:5]
dim(pca1_zq$rotation)
# Varianza explicada por cada componente
pca1_zq$sdev^2
# Regla de Kaiser y retener aquellos factores con un valor propio mayor que uno
ev1 <- eigen(cor(t1))
ev1$values
summary(pca1_zq)
pca_zq <- prcomp(t, scale = TRUE) ## aquí escalo y realiza primeras componentes
names(pca_zq)
head(pca_zq$rotation)[, 1:5]
dim(pca_zq$rotation)
# Varianza explicada por cada componente
pca_zq$sdev^2
# Regla de Kaiser y retener aquellos factores con un valor propio mayor que uno
ev <- eigen(cor(t))
ev$values
summary(pca_zq)
install.packages("RcmdrMisc")
library(RcmdrMisc)
KMO(t)
library(RcmdrMisc)
'''
0.00 a 0.49 inaceptable
0.50 a 0.59 miserable
0.60 a 0.69 mediocre
0.70 a 0.79 regular
0.80 a 0.89 meritorio
0.90 a 1.00 maravilloso
'''
library(RcmdrMisc)
KMO(t)
library(tsne)
install.packages("tsne")
library(tsne)
library(plotly)
install.packages("plotly")
library(tsne)
library(plotly)
set.seed(0)
tsne <- tsne(t, initial_dims = 2)
tsne <- data.frame(tsne)
pdb <- cbind(tsne,t)
options(warn = -1)
fig <-  plot_ly(data = pdb ,x =  ~X1, y = ~X2, type = 'scatter', mode = 'markers', split = ~t)
fig <- fig %>%
layout(
plot_bgcolor = "#e5ecf6"
)
fig
library(tsne)
library(plotly)
set.seed(0)
tsne <- tsne(t, initial_dims = 3)
tsne <- data.frame(tsne)
pdb <- cbind(tsne,t)
options(warn = -1)
fig <-  plot_ly(data = pdb ,x =  ~X1, y = ~X2, type = 'scatter', mode = 'markers', split = ~t)
fig <- fig %>%
layout(
plot_bgcolor = "#e5ecf6"
)
fig
tsne(t, initial_dims = 2)
d_low = Isomap(data=t, dims=2, k=5)
install.packages("RDRToolbox")
install.packages("RDRToolbox")
d_low = Isomap(data=t, dims=2, k=5)
d_low = Isomap(data=t, dims=2, k=5)
d_low = Isomap(data=t, dims=2, k=5)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RDRToolbox")
